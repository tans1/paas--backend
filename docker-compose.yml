version: "3.8"

services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-public

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: FinalYearProjectDb
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app
    depends_on:
      traefik:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/FinalYearProjectDb?schema=public"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redispass
    networks:
      - internal-network
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    user: root

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=redispass
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - internal-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  traefik-public:
    external: true
  internal-network:
    driver: bridge

volumes:
  postgres_data:
  node_modules:
  redis_data: